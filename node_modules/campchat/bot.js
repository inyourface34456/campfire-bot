module.exports.Bot = class extends module.exports.Client {
    constructor(prefix, ...args) {
        super(...args)
        this.prefix = prefix
        this.commands = {}
        this.on('message', (msg)=>{
            if (msg.user?.name === this.username && msg.user?.color === this.color) {
                return
            }
            if (msg.content.startsWith(prefix)) {
                let args = msg.content.slice(prefix.length).split(' ')
                if (this.commands[args[0]] === undefined) {
                    return this.emit('bad command', msg, args[0])
                }
                this.commands[args[0]](msg, ...(args.slice(1)))
            }
        })

        let t = this
        function help(msg, cmd) {
            if (cmd === undefined) {
                let cmds = Object.keys(t.commands).join(', ')
                return msg.send(`Commands: ${cmds}. Use ${t.prefix}help command to get info about a command`)
            } else {
                if (t.commands[cmd] === undefined) {
                    return msg.send('That is not a command!')
                }
                let desc = t.commands[cmd].desc
                if (desc === '') {
                    msg.send(cmd)
                } else {
                    msg.send(`${cmd} - ${desc}`)
                }
            }
        }
        this.command('help', (msg, cmd)=>{
            help(msg, cmd)
        }, 'The help command.')
    }
    command(name, callback, desc='') {
        callback.desc = desc
        this.commands[name] = callback
    }

    _isBlocked(m) {
        let r = this.block_db_cb('has', m.user?.id)
        if (r){
            if (m.content.startsWith(this.prefix)){
                this.emit('command blocked', m)
            } else {
                this.emit('message blocked', m)
            }
        }
        return r
    }
}